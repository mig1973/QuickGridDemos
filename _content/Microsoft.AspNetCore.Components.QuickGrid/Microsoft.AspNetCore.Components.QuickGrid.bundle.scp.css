/* _content/Microsoft.AspNetCore.Components.QuickGrid/Columns/ColumnBase.razor.rz.scp.css */
/* Contains the title text and sort indicator, and expands to fill as much of the col width as it can */
.col-title[b-b7yucal7gj] {
    display: flex; /* So that we can make col-title-text expand as much as possible, and still hide overflow with ellipsis */
    min-width: 0px;
    flex-grow: 1;
    padding: 0;
}

/* If the column is sortable, its title is rendered as a button element for accessibility and to support navigation by tab */
button.col-title[b-b7yucal7gj] {
    border: none;
    background: none;
    position: relative;
    cursor: pointer;
}

.col-justify-center .col-title[b-b7yucal7gj] {
    justify-content: center;
}

.col-justify-end .col-title[b-b7yucal7gj] {
    flex-direction: row-reverse; /* For end-justified cols, the sort indicator should appear before the title text */
}

/* We put the column title text in its own element primarily so that it can use text-overflow: ellipsis */
.col-title-text[b-b7yucal7gj] {
    text-overflow: ellipsis;
    overflow: hidden;
    white-space: nowrap;
}
/* _content/Microsoft.AspNetCore.Components.QuickGrid/Pagination/Paginator.razor.rz.scp.css */
.paginator[b-3qssc0bm46] {
    display: flex;
    border-top: 1px solid #ccc;
    margin-top: 0.5rem;
    padding: 0.5rem 0;
}

nav[b-3qssc0bm46] {
    display: flex;
    margin-left: auto;
    gap: 1rem;
}

nav button[b-3qssc0bm46] {
    border: 0;
    background: none;
}

    nav button:not([disabled]):hover[b-3qssc0bm46] {
        background-color: #eee;
    }

    nav button:not([disabled]):active[b-3qssc0bm46] {
        background-color: #aaa;
    }

.go-first[b-3qssc0bm46]:after {
    content: '\21E4'; /* ⇤ */
}

.go-previous[b-3qssc0bm46]:after {
    content: '\2190'; /* ← */
}

.go-next[b-3qssc0bm46]:after {
    content: '\2192'; /* → */
}

.go-last[b-3qssc0bm46]:after {
    content: '\21E5'; /* ⇥ */
}
/* _content/Microsoft.AspNetCore.Components.QuickGrid/QuickGrid.razor.rz.scp.css */
/*
    TODO: Don't actually used scoped CSS for QuickGrid.razor, because it's so perf-critical we don't even want to
    add the extra attributes on all the tr/td elements. We can hook everything onto the table.quickgrid class,
    remembering to be specific about matching closest tr/td only, not any child tables.
*/

th[b-vznuo5fmpv] {
    position: relative; /* So that col-options appears next to it */
}

.col-header-content[b-vznuo5fmpv] {
    /* We want the th elements to be display:flex, but they also have to be display:table-cell to avoid breaking the layout.
       So .col-header-content is an immediate child with display:flex. */
    position: relative;
    display: flex;
    align-items: center;
}

/* Deep to make it easy for people adding a sort-indicator element in a custom HeaderTemplate */
th[b-vznuo5fmpv]  .sort-indicator {
    /* Preset width so the column width doen't change as the sort indicator appears/disappears */
    width: 1rem;
    text-align: center;
}

.col-sort-asc[b-vznuo5fmpv]  .sort-indicator:before {
    content: '\2B9F';
}

.col-sort-desc[b-vznuo5fmpv]  .sort-indicator:before {
    content: '\2B9D';
}

/* Deep to make it easy for people adding a col-options-button element in a custom HeaderTemplate */
th[b-vznuo5fmpv]  .col-options-button {
    border: none;
    background: none;
    padding: 0; /* So that even if the text on the button is wide, it gets properly centered */
}

    th[b-vznuo5fmpv]  .col-options-button:before {
        content: '\2630';
    }

.col-options[b-vznuo5fmpv] {
    position: absolute;
    background: white;
    border: 1px solid silver;
    left: 0;
    padding: 1rem;
    z-index: 1;
}

.col-justify-end .col-options[b-vznuo5fmpv] {
    left: unset;
    right: 0;
}

.col-width-draghandle[b-vznuo5fmpv] {
    position: absolute;
    top: 0;
    bottom: 0;
    right: 0rem;
    cursor: ew-resize;
}

    .col-width-draghandle[b-vznuo5fmpv]:after {
        content: ' ';
        position: absolute;
        top: 0;
        bottom: 0;
        border-left: 1px solid black;
    }

td.col-justify-center[b-vznuo5fmpv] {
    text-align: center;
}

td.col-justify-end[b-vznuo5fmpv] {
    text-align: right;
}

/* Unfortunately we can't use the :dir pseudoselector due to lack of browser support. Instead we have to rely on
    the developer setting <html dir="rtl"> to detect if we're in RTL mode. */
html[dir=rtl] td.col-justify-end[b-vznuo5fmpv] {
    text-align: left;
}

html[dir=rtl] .col-options[b-vznuo5fmpv] {
    left: unset;
    right: 0;
}

html[dir=rtl] .col-justify-end .col-options[b-vznuo5fmpv] {
    right: unset;
    left: 0;
}
/* _content/Microsoft.AspNetCore.Components.QuickGrid/Themes/Default.css */
.quickgrid[theme=default] {
    --col-gap: 1rem;
}

.quickgrid[theme=default] .col-header-content {
    padding-right: var(--col-gap);
}

.quickgrid[theme=default] > thead > tr > th {
    font-weight: normal;
}

.quickgrid[theme=default].loading > tbody {
    opacity: 0.25;
    transition: opacity linear 100ms;
    transition-delay: 25ms; /* Don't want flicker if the queries are resolving almost immediately */
}

.quickgrid[theme=default] .col-title {
    padding: 0.1rem 0.4rem;
}

    .quickgrid[theme=default] > tbody > tr > td {
        padding: 0.1rem calc(0.4rem + var(--col-gap)) 0.1rem 0.4rem;
    }

.quickgrid[theme=default] .col-title {
    gap: 0.4rem; /* Separate the sort indicator from title text */
    font-weight: bold;
}

.quickgrid[theme=default] .sort-indicator {
    opacity: 0.5;
}

.quickgrid[theme=default] .col-options-button {
    width: 1.5rem;
}

.quickgrid[theme=default] button.col-title:hover, .quickgrid[theme=default] .col-options-button:hover {
    background-color: rgba(128, 128, 128, 0.2);
}

.quickgrid[theme=default] button.col-title:active, .quickgrid[theme=default] .col-options-button:active {
    background-color: rgba(128, 128, 128, 0.5);
}

    .quickgrid[theme=default] > thead .col-width-draghandle {
        width: 1rem;
        right: calc(var(--col-gap)/2 - 0.5rem);
    }

    .quickgrid[theme=default] > thead .col-width-draghandle:hover {
        background: rgba(128, 128, 128, 0.2);
    }

    .quickgrid[theme=default] > thead .col-width-draghandle:active {
        background: rgba(128, 128, 128, 0.4);
    }

    .quickgrid[theme=default] > thead .col-width-draghandle:hover:after, .quickgrid[theme=default] > thead .col-width-draghandle:active:after {
        border-color: black;
    }

    .quickgrid[theme=default] > thead .col-width-draghandle:after {
        border-color: #ccc;
        left: 0.5rem;
        top: 5px;
        bottom: 5px;
    }

.quickgrid[theme=default] .col-options {
    box-shadow: 0 3px 8px 1px #aaa;
    border-color: #ddd;
    border-radius: 0.3rem;
}

.quickgrid[theme=default] > tbody > tr > td.grid-cell-placeholder:after {
    content: '\2026';
    opacity: 0.75;
}
